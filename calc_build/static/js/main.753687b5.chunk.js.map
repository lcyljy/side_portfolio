{"version":3,"sources":["Calculator.js","dropdown/dropdown.js","logo.svg","App.js","reportWebVitals.js","index.js","dropdown/dropdownComponent.js"],"names":["Calculator","props","state","result","process","handlerArr","operlator","error","onRowHandler","bind","e","console","log","target","innerText","test","this","setState","resultValue","charAt","length","eval","Number","className","onMouseUp","checkResultLength","id","cols","rows","disabled","value","onChange","onClick","operatorHandler","clearHandler","colSpan","React","Component","window","onload","document","querySelectorAll","forEach","dropdown_link","onclick","childNodes","parentNode","nextSibling","classList","toggle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Index","element","main_component","navClickHandler","a_link","dataset","component","Acomp","Bcomp","Ccomp","StrictMode","NavComp","clickHandler","path","href","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.753687b5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Calculator.scss'\n\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: \"\",\n            process: \"\",\n            handlerArr: [],\n            operlator: \"\",\n            error: \"ERROR\"\n\n        }\n        this.onRowHandler.bind(this)\n    }\n\n    // field에서는 let, const, this를 사용할 수 없다.\n    onRowHandler(e) {\n        // console.log(\"a\")\n        //className을 가져와서 해당걸 동작\n        console.log(e.target.innerText)\n        let test = this.state.result\n        test += e.target.innerText;\n        // console.log(test)\n\n        this.setState({\n\n            result: test\n        });\n        console.log(this.state)\n    }\n\n    operatorHandler(e) {\n        // console.log(\"ee\")\n        console.log(e.target.innerText)\n        this.setState({\n            process: this.state.result + e.target.innerText,\n            handlerArr: [this.state.result],\n            operlator: e.target.innerText,\n            result: \"\"\n        })\n        console.log(this.state)\n    }\n\n    resultValue(e) {\n        let handlerArr = this.state.process;\n        let operlator = handlerArr.charAt(handlerArr.length - 1);\n        console.log(e.target.innerText)\n        console.log(this.state.result)\n        let result = eval(Number(this.state.handlerArr[0]) + operlator + Number(this.state.result))\n        // const operatorFunctions = {\n        //     '+': (x, y) => x + y,\n        //     '-': (x, y) => x - y,\n        //     '*': (x, y) => x * y,\n        //     '/': (x, y) => x / y,\n        // }\n        // let testA = eval(Number(this.state.handlerArr[0])+operlator+Number(this.state.result))\n        // console.log(testA)\n        this.setState({\n            process: this.state.handlerArr[0] + operlator + this.state.result + e.target.innerText + result,\n            result: eval(Number(this.state.handlerArr[0]) + operlator + Number(this.state.result))\n        })\n        \n    \n        console.log(this.state.process)\n        console.log(this.state.result)\n        \n    }\n    checkResultLength(e){\n        if (this.state.result.length>10){\n            this.setState({\n                process: this.state.error + \" PLEASE PUSH C\",\n                result: this.state.error +\"TOOLONG\"\n                \n            })\n        }\n        console.log(this.state.result.length)\n    }\n\n    clearHandler() {\n        this.setState({\n            result: 0,\n            process: 0,\n            handlerArr: [],\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"calculator\" onMouseUp={this.checkResultLength.bind(this)}>\n                <div className=\"Result\">\n                    <textarea className=\"process\" id=\"\" cols=\"1\" rows=\"1\" disabled value={this.state.process} />\n                    <hr />\n                    <textarea className=\"result\" id=\"\" cols=\"1\" rows=\"1\" disabled value={this.state.result} onChange={this.onRowHandler} />\n                </div>\n                <hr />\n                <table className=\"BtnTable\">\n                    <tbody>\n                        <tr>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">7</button></td>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">8</button></td>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">9</button></td>\n                            <td><button onClick={this.operatorHandler.bind(this)} className=\"Btn Oper\">/</button></td>\n                        </tr>\n                        <tr>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">4</button></td>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">5</button></td>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">6</button></td>\n                            <td><button onClick={this.operatorHandler.bind(this)} className=\"Btn Oper\">*</button></td>\n                        </tr>\n                        <tr>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">1</button></td>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">2</button></td>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">3</button></td>\n                            <td><button onClick={this.operatorHandler.bind(this)} className=\"Btn Oper\">-</button></td>\n                        </tr>\n                        <tr>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">.</button></td>\n                            <td><button onClick={this.onRowHandler.bind(this)} className=\"Btn\">0</button></td>\n\n                            <td><button onClick={this.clearHandler.bind(this)} className=\"Btn \">C</button></td>\n                            <td><button onClick={this.operatorHandler.bind(this)} className=\"Btn Oper\">+</button></td>\n                        </tr>\n                        <tr>\n                            <td colSpan='4'><button onClick={this.resultValue.bind(this)} className=\"resultBtn\">=</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n//function Calculator(){}\n\nexport default Calculator;","window.onload=function(){\n    //node.nextSibling : 인접(after) 형제 선택자\n    //node.previousSibling : 인접(before) 형제 선택자\n    //node.firstChild: 첫번째 자식 선택자\n    //node.childNodes: 모든 자식 선택자\n    //node.lastChild : 마지막 자식 선택자\n    //node.parentNode: 부모 선택자\n    const dropdown_arr=document.querySelectorAll(\".dropdown-active .link\");\n    dropdown_arr.forEach((dropdown_link) => {\n        dropdown_link.onclick = function (e){\n            console.log(e.target.childNodes);\n            console.log(e.target.childNodes.length);\n            console.log(e.target.childNodes.parentNode)\n            if(e.target.childNodes.length=1){\n                // let rightTarget = e.target.parentNode;\n                // let menu = rightTarget.nextSibling;\n                // menu.classList.toggle(\"active\")\n                let menu = e.target.nextSibling;\n            menu.classList.toggle(\"active\");\n            } else{\n            let menu = e.target.nextSibling;\n            menu.classList.toggle(\"active\");\n        }\n        }\n        \n    })\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport './index.css';\nimport {BrowserRouter,Route, Link, Switch} from 'react-router-dom';\n\n\nimport App from './App';\nimport Calculator from './Calculator';\nimport reportWebVitals from './reportWebVitals';\nimport Dropdown from './dropdown/dropdownComponent';\n\n\nclass Index extends React.Component { // 전체 컴포넌트를 제어하는 컴포넌트 생성\n  constructor(props){\n    super(props);\n    let element=<><h1>안녕!</h1></>\n    this.state={main_component: element}\n    //jsx를 어디서든 참조할 수 있다.\n    this.navClickHandler.bind(this);\n  }\n  componentDidMount(){\n    //순수 자바스크립트는 컴포넌트가 마운트된 시점에 작성하면 된다. !(==window.onload)\n    // document.querySelector(\"a\").onclick=function(){alert(this)};\n  }\n  \n  navClickHandler(e){\n    //alert(e.target.href.split(\"#\")[1]); // 이렇게 주소로 찾아올 수 있지만 좋지 못한 방법\n\n    let a_link=e.target.dataset.component;\n    let element=<></>;\n    if(a_link==\"Acomp\"){\n      element= <Acomp></Acomp>\n    } else if(a_link==\"Bcomp\"){\n      element= <Bcomp></Bcomp>;\n    } else if(a_link==\"Ccomp\"){\n      element= <Ccomp></Ccomp>;\n    } else if(a_link==\"Calculator\"){\n      element= <Calculator></Calculator>;\n    } \n    this.setState({main_component: element})\n  }\n\n  render() {\n    return (\n      <React.StrictMode>\n        {/* Link와 Route 모두 감싸고 있어야한다. */}\n        <BrowserRouter> \n        <NavComp clickHandler={this.navClickHandler.bind(this)}></NavComp>\n        <h2>조건문으로 SPA 구현</h2>\n        <main>\n          {this.state.main_component}\n        </main>\n        <hr />\n        <h2>Router로 다른 페이지로 component 호출(SPA X)</h2>\n        <p>A 태그와 비슷한 Link로 라우터의 주소를 호출하면 SPA로 동작한다.</p>\n        <Switch>\n          <Route path=\"/Acomp\" component={Acomp}></Route>\n          <Route path=\"/Bcomp\">\n            <Bcomp></Bcomp>\n          </Route>\n          <Route path=\"/Calculator\" component={Calculator}></Route>\n          <Route path=\"/Ccomp\" component={Ccomp}></Route>\n        <Route path=\"/\"> /* exact */\n          <h2>환영합니다 home 페이지 입니다.</h2>\n          <p>root 주소를 호출했습니다~</p>\n          <ul>\n            <li>주소/~~~~ 1영역 / ~~~~2영역/</li>\n            <li>주소/ , 주소  / Acom , 주소 / Bcom : 1영역</li>\n            <li>route는 주소를 요청하면 해당 여역의 포함되는 주소를 모두 호출한다. (예: /Bcomp => / , /Bcomp)</li>\n            <li> 포함되는 주소에 exact 속성을 추가한다.</li>\n            <li> 라우터의 Switch를 사용하면 포함되는 모든 주소를 찾지 않고 일치하는 주소를 찾으면 멈춘다.(break)</li>\n          </ul>\n        </Route>\n          </Switch>\n        </BrowserRouter>\n        {/* <Ccomp></Ccomp>\n        <Acomp></Acomp>\n        <Bcomp></Bcomp>\n        <Dropdown />\n        <App />\n        <Calculator /> */}\n      </React.StrictMode>\n    );\n  }\n}\n\n\n// export default index 내부에서 렌더할 때 생략가능\nfunction NavComp(props){\n  console.log(props);\n  return(\n    <>\n    <div className=\"navigation-container\">\n      <h1>Nav 컴포넌트</h1>\n      <ul>\n        <li><a onClick={props.clickHandler} data-component=\"Acomp\" href=\"#Acomp\">Acomp</a></li>\n        <li><a onClick={props.clickHandler} data-component=\"Bcomp\" href=\"#Bcomp\">Bcomp</a></li>\n        <li><a onClick={props.clickHandler} data-component=\"Calculator\" href=\"#Calculator\">Calculator</a></li>\n        <li><a onClick={props.clickHandler} data-component=\"Ccomp\" href=\"#Ccomp\">Ccomp</a></li>\n      </ul>\n    </div>\n    <hr />\n    <div className=\"navigation-container\">\n      <h1>Route 컴포넌트 (컴포넌트를 주소로 요청=화면 새로고침</h1>\n      <p>싱글페이지 어플리케이션(SPA)은 해당 페이지가 너무 무거워 질 수 있어서 분리시키는 것이 좋은 방법이다.</p>\n      <ul>\n        <li><a href=\"/Acomp\">Acomp</a></li>\n        <li><a href=\"/Bcomp\">Bcomp</a></li>\n        <li><a href=\"/Calculator\">Calculator</a></li>\n        <li><a href=\"/Ccomp\">Ccomp</a></li>\n      </ul>\n    </div>\n    <hr />\n    <div className=\"navigation-container\">\n      <h1>Link로 Route 컴포넌트 호출 (컴포넌트를 주소로 요청=SPA</h1>\n      \n      <ul>\n        <li><Link to=\"/Acomp\">Acomp</Link></li>\n        <li><Link to=\"/Bcomp\">Bcomp</Link></li>\n        <li><Link to=\"/Calculator\">Calculator</Link></li>\n        <li><Link to=\"/Ccomp\">Ccomp</Link></li>\n      </ul>\n    </div>\n    </>\n  );\n}\nfunction Ccomp(){\n  return(\n    <nav><p>test</p></nav>\n  );\n}\nfunction Acomp(){\n  return(\n    <div><h1>Acomp 컴포넌트</h1></div>\n  );\n}\nfunction Bcomp(){\n  return(\n    <div><h1>Bcomp 컴포넌트</h1></div>\n  );\n}\n\nReactDOM.render(\n  <Index></Index>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from 'react'\nimport './dropdown.scss'\nimport './dropdown'\n\nexport class dropdownComponent extends Component {\n    render() {\n        return (\n            <div className=\"dropdown-container\">\n                <h2>드롭다운 메뉴 만들기</h2>\n                <div className=\"dropdown\">\n                    <a className=\"link\" href=\"#title\">타이틀<span className=\"giho\" value=\"giho\">▼</span></a>\n                    <ul className=\"menu\">\n                        <li>\n                            <a href=\"#calculator\">계산기</a>\n                        </li>\n                        <li>\n                            <a href=\"#dropdwon\">드롭다운</a>\n                        </li>\n                        <li>\n                            <a href=\"#side_nav\">사이드 네비게이션</a>\n                        </li>\n                        <li>\n                            <a href=\"#top_nav\">탑 내비게이션</a>\n                        </li>\n                    </ul>\n                </div>\n                <hr />\n\n                <div className=\"dropdown-active\">\n                    <a className=\"link\" href=\"#title\">타이틀<span className=\"giho\">▼</span></a>\n                    <ul className=\"menu\">\n                        <li>\n                            <a href=\"#calculator\">계산기</a>\n                        </li>\n                        <li>\n                            <a href=\"#dropdwon\">드롭다운</a>\n                        </li>\n                        <li>\n                            <a href=\"#side_nav\">사이드 네비게이션</a>\n                        </li>\n                        <li>\n                            <a href=\"#top_nav\">탑 내비게이션</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default dropdownComponent;\n"],"sourceRoot":""}